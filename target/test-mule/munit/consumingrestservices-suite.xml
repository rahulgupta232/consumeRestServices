<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:munit="http://www.mulesoft.org/schema/mule/munit" xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools"
	xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd">
	<munit:config name="consumingrestservices-suite.xml" />
	<munit:test name="consumingrestservicesFlow-test" doc:id="76f38b39-b82c-4b67-a143-9e9b2dea5221" >
		<munit:behavior >
			<munit:set-event doc:name="Set Input" doc:id="b0f1a108-a421-4682-a21b-99682bdcbfde" >
				<munit:payload value="#[readUrl('classpath://consumingrestservicesFlowtest\set-event_payload.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to consumingrestservicesFlow" doc:id="e6cd6006-91ce-45ef-afe9-432a14bd68fe" name="consumingrestservicesFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="be19e776-bcb1-435f-a73d-a6f73b920980" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import consumingrestservicesFlowtest::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
			<munit-tools:verify-call doc:name="Verify GET_employees" doc:id="899ff9ce-c14e-4bf1-b240-f56d94440b40" processor="http:request" atLeast="1">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="276a73f8-7a9f-4820-9e4b-3af0365477d8" attributeName="doc:id" />
				</munit-tools:with-attributes>
			</munit-tools:verify-call>
		</munit:validation>
	</munit:test>
	<munit:test name="consumingrestservicesFlow-default" doc:id="3ea4d04b-618d-4863-b46b-daa1269155f0" >
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock GET_employees" doc:id="f785cb28-2b40-44c5-8264-9e5e5f7a5d30" processor="http:request">
				<munit-tools:with-attributes >
					<munit-tools:with-attribute whereValue="276a73f8-7a9f-4820-9e4b-3af0365477d8" attributeName="doc:id" />
				</munit-tools:with-attributes>
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://consumingrestservicesFlowtest1\mock_payload.dwl')]" mediaType="application/json" encoding="UTF-8" />
					<munit-tools:attributes value="#[readUrl('classpath://consumingrestservicesFlowtest1\mock_attributes.dwl')]" />
					<munit-tools:variables >
						<munit-tools:variable key="lastDateTime" value="#[output application/java --- readUrl('classpath://consumingrestservicesFlowtest1\mock_variable_.dwl')]" mediaType="application/java" encoding="UTF-8" />
					</munit-tools:variables>
				</munit-tools:then-return>
			</munit-tools:mock-when>
			<munit:set-event doc:name="Set Input" doc:id="b190168c-2f84-43b7-816a-cd0340b7fd7d" >
				<munit:payload value="#[readUrl('classpath://consumingrestservicesFlowtest1\set-event_payload.dwl')]" />
			</munit:set-event>
		</munit:behavior>
		<munit:execution >
			<flow-ref doc:name="Flow-ref to consumingrestservicesFlow" doc:id="bc4d9c57-c1c6-4480-9041-f9655bdfd9fd" name="consumingrestservicesFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert doc:name="Assert payload" doc:id="05cacffe-d58d-4b76-b29e-33c89a33c3e6" message="The payload does not match">
				<munit-tools:that ><![CDATA[#[%dw 2.0
import consumingrestservicesFlowtest1::assert_expression_payload
---
assert_expression_payload::main({payload: payload, attributes: attributes, vars: vars})]]]></munit-tools:that>
			</munit-tools:assert>
		</munit:validation>
	</munit:test>


</mule>
